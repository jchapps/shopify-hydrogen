{
  "version": 3,
  "sources": ["../../../../../app/components/ProductOptions.jsx", "../../../../../app/routes/products/$handle.jsx"],
  "sourcesContent": ["import {\n  Link,\n  useLocation,\n  useSearchParams,\n  useTransition,\n} from '@remix-run/react';\n\nexport default function ProductOptions({options, selectedVariant}) {\n  const {pathname, search} = useLocation();\n  const [currentSearchParams] = useSearchParams();\n  const transition = useTransition();\n\n  const paramsWithDefaults = (() => {\n    const defaultParams = new URLSearchParams(currentSearchParams);\n\n    if (!selectedVariant) {\n      return defaultParams;\n    }\n\n    for (const {name, value} of selectedVariant.selectedOptions) {\n      if (!currentSearchParams.has(name)) {\n        defaultParams.set(name, value);\n      }\n    }\n\n    return defaultParams;\n  })();\n\n  // Update the in-flight request data from the 'transition' (if available)\n  // to create an optimistic UI that selects a link before the request is completed\n  const searchParams = transition.location\n    ? new URLSearchParams(transition.location.search)\n    : paramsWithDefaults;\n\n  return (\n    <div className=\"grid gap-4 mb-6\">\n      {options.map((option) => {\n        if (!option.values.length) {\n          return;\n        }\n\n        // get the currently selected option value\n        const currentOptionVal = searchParams.get(option.name);\n        return (\n          <div\n            key={option.name}\n            className=\"flex flex-col flex-wrap mb-4 gap-y-2 last:mb-0\"\n          >\n            <h3 className=\"whitespace-pre-wrap max-w-prose font-bold text-lead min-w-[4rem]\">\n              {option.name}\n            </h3>\n\n            <div className=\"flex flex-wrap items-baseline gap-4\">\n              {option.values.map((value) => {\n                const linkParams = new URLSearchParams(searchParams);\n                const isSelected = currentOptionVal === value;\n                linkParams.set(option.name, value);\n                return (\n                  <Link\n                    key={value}\n                    to={`${pathname}?${linkParams.toString()}`}\n                    preventScrollReset\n                    replace\n                    className={`leading-none py-1 border-b-[1.5px] cursor-pointer transition-all duration-200 ${\n                      isSelected ? 'border-gray-500' : 'border-neutral-50'\n                    }`}\n                  >\n                    {value}\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "import {useLoaderData} from '@remix-run/react';\nimport {json} from 'react-router';\nimport ProductOptions from '~/components/ProductOptions';\nimport {MediaFile, Money, ShopPayButton} from '@shopify/hydrogen-react';\n\nimport {useMatches, useFetcher} from '@remix-run/react';\n\nfunction ProductForm({variantId}) {\n  const [root] = useMatches();\n  const selectedLocale = root?.data?.selectedLocale;\n  const fetcher = useFetcher();\n\n  const lines = [{merchandiseId: variantId, quantity: 1}];\n\n  return (\n    <fetcher.Form action=\"/cart\" method=\"post\">\n      <input type=\"hidden\" name=\"cartAction\" value={'ADD_TO_CART'} />\n      <input\n        type=\"hidden\"\n        name=\"countryCode\"\n        value={selectedLocale?.country ?? 'US'}\n      />\n      <input type=\"hidden\" name=\"lines\" value={JSON.stringify(lines)} />\n      <button className=\"bg-rose-200 text-black px-6 py-3 w-full rounded-md text-center font-medium max-w-[400px]\">\n        Add to Bag\n      </button>\n    </fetcher.Form>\n  );\n}\n\nexport const loader = async ({params, context, request}) => {\n  const {handle} = params;\n  const searchParams = new URL(request.url).searchParams;\n  const selectedOptions = [];\n\n  // set selected options from the query string\n  searchParams.forEach((value, name) => {\n    selectedOptions.push({name, value});\n  });\n\n  const {product} = await context.storefront.query(PRODUCT_QUERY, {\n    variables: {\n      handle,\n      selectedOptions,\n    },\n  });\n\n  if (!product?.id) {\n    throw new Response(null, {status: 404});\n  }\n\n  // optionally set a default variant so you always have an \"orderable\" product selected\n  const selectedVariant =\n    product.selectedVariant ?? product?.variants?.nodes[0];\n\n  return json({\n    product,\n    selectedVariant,\n  });\n};\n\nexport default function ProductHandle() {\n  const {product, selectedVariant} = useLoaderData();\n  const orderable = selectedVariant?.availableForSale || false;\n\n  return (\n    <section className=\"w-full gap-4 md:gap-8 grid px-6 md:px-8 lg:px-12\">\n      <div className=\"grid items-start gap-6 lg:gap-20 md:grid-cols-2 lg:grid-cols-3\">\n        <div className=\"grid md:grid-flow-row  md:p-0 md:overflow-x-hidden md:grid-cols-2 md:w-full lg:col-span-2\">\n          <div className=\"md:col-span-2 snap-center card-image aspect-square md:w-full w-[80vw] shadow rounded\">\n            <ProductGallery media={product.media.nodes} />\n          </div>\n        </div>\n        <div className=\"md:sticky md:mx-auto max-w-xl md:max-w-[24rem] grid gap-8 p-0 md:p-6 md:px-0 top-[6rem] lg:top-[8rem] xl:top-[10rem]\">\n          <div className=\"grid gap-2\">\n            <h1 className=\"text-4xl font-bold leading-10 whitespace-normal\">\n              {product.title}\n            </h1>\n            <span className=\"max-w-prose whitespace-pre-wrap inherit text-copy opacity-50 font-medium\">\n              {product.vendor}\n            </span>\n            <div\n              className=\"prose border-t border-gray-200 pt-6 text-black text-md\"\n              dangerouslySetInnerHTML={{__html: product.descriptionHtml}}\n            ></div>\n          </div>\n          <ProductOptions\n            options={product.options}\n            selectedVariant={selectedVariant}\n          />\n          <Money\n            withoutTrailingZeros\n            data={selectedVariant.price}\n            className=\"text-xl font-semibold mb-2\"\n          />\n          {orderable && (\n            <div className=\"space-y-2\">\n              <ShopPayButton\n                variantIds={[selectedVariant?.id]}\n                width={'400px'}\n              />\n              <ProductForm variantId={selectedVariant?.id} />\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n\n//ProductGallery component that uses Hydrogen's MediaFile component to build a product image gallery\n\nfunction ProductGallery({media}) {\n  if (!media.length) {\n    return null;\n  }\n\n  const typeNameMap = {\n    MODEL_3D: 'Model3d',\n    VIDEO: 'Video',\n    IMAGE: 'MediaImage',\n    EXTERNAL_VIDEO: 'ExternalVideo',\n  };\n\n  return (\n    <div\n      className={`grid gap-4 overflow-x-scroll grid-flow-col md:grid-flow-row  md:p-0 md:overflow-x-auto md:grid-cols-2 w-[90vw] md:w-full lg:col-span-2`}\n    >\n      {media.map((med, i) => {\n        let extraProps = {};\n\n        if (med.mediaContentType === 'MODEL_3D') {\n          extraProps = {\n            interactionPromptThreshold: '0',\n            ar: true,\n            loading: 'eager',\n            disableZoom: true,\n          };\n        }\n\n        const data = {\n          ...med,\n          __typename: typeNameMap[med.mediaContentType] || typeNameMap['IMAGE'],\n          image: {\n            ...med.image,\n            altText: med.alt || 'Product image',\n          },\n        };\n\n        return (\n          <div\n            className={`${\n              i % 3 === 0 ? 'md:col-span-2' : 'md:col-span-1'\n            } snap-center card-image bg-white aspect-square md:w-full w-[80vw] shadow-sm rounded`}\n            key={data.image.id}\n          >\n            <MediaFile\n              tabIndex=\"0\"\n              className={`w-full h-full aspect-square object-cover`}\n              data={data}\n              options={{\n                crop: 'center',\n              }}\n              {...extraProps}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nconst PRODUCT_QUERY = `#graphql\n  query product($handle: String!, $selectedOptions: [SelectedOptionInput!]!) {\n    product(handle: $handle) {\n      id\n      title\n      handle\n      vendor\n      descriptionHtml\n      media(first: 10) {\n        nodes {\n          ... on MediaImage {\n            mediaContentType\n            image {\n              id\n              url\n              altText\n              width\n              height\n            }\n          }\n        }\n      }\n      options {\n        name,\n        values\n      }\n      selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {\n        id\n        availableForSale\n        selectedOptions {\n          name\n          value\n        }\n        image {\n          id\n          url\n          altText\n          width\n          height\n        }\n        price {\n          amount\n          currencyCode\n        }\n        compareAtPrice {\n          amount\n          currencyCode\n        }\n        sku\n        title\n        unitPrice {\n          amount\n          currencyCode\n        }\n        product {\n          title\n          handle\n        }\n      }\n      variants(first: 1) {\n        nodes {\n          id\n          title\n          availableForSale\n          price {\n            currencyCode\n            amount\n          }\n          compareAtPrice {\n            currencyCode\n            amount\n          }\n          selectedOptions {\n            name\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "ProductOptions", "options", "selectedVariant", "pathname", "search", "useLocation", "currentSearchParams", "useSearchParams", "transition", "useTransition", "paramsWithDefaults", "defaultParams", "name", "value", "searchParams", "option", "currentOptionVal", "linkParams", "isSelected", "Link", "import_jsx_runtime", "ProductForm", "variantId", "root", "useMatches", "selectedLocale", "fetcher", "useFetcher", "lines", "ProductHandle", "product", "selectedVariant", "useLoaderData", "orderable", "ProductGallery", "ProductOptions", "Money", "ShopPayButton", "ProductForm", "media", "typeNameMap", "med", "i", "extraProps", "data", "MediaFile"]
}
