{"version":3,"file":"7d385117.js","sources":["../../../node_modules/@shopify/hydrogen/dist/esnext/components/ProductPrice/ProductPrice.client.js"],"sourcesContent":["import React from 'react';\nimport { Money } from '../Money/index.js';\nimport { flattenConnection } from '../../utilities/flattenConnection/index.js';\n/**\n * The `ProductPrice` component renders a `Money` component with the product\n * [`priceRange`](https://shopify.dev/api/storefront/reference/products/productpricerange)'s `maxVariantPrice` or `minVariantPrice`, for either the regular price or compare at price range.\n */\nexport function ProductPrice(props) {\n    const { priceType = 'regular', variantId, valueType = 'min', data: product, ...passthroughProps } = props;\n    if (product == null) {\n        throw new Error(`<ProductPrice/> requires a product as the 'data' prop`);\n    }\n    let price;\n    let measurement;\n    const variant = variantId\n        ? flattenConnection(product?.variants ?? {}).find((variant) => variant?.id === variantId) ?? null\n        : null;\n    if (priceType === 'compareAt') {\n        if (variantId && variant) {\n            if (variant.compareAtPriceV2?.amount === variant.priceV2?.amount) {\n                return null;\n            }\n            price = variant.compareAtPriceV2;\n        }\n        else if (valueType === 'max') {\n            price = product?.compareAtPriceRange?.maxVariantPrice;\n        }\n        else {\n            price = product?.compareAtPriceRange?.minVariantPrice;\n        }\n    }\n    else {\n        if (variantId && variant) {\n            price = variant.priceV2;\n            if (valueType === 'unit') {\n                price = variant.unitPrice;\n                measurement = variant.unitPriceMeasurement;\n            }\n        }\n        else if (valueType === 'max') {\n            price = product.priceRange?.maxVariantPrice;\n        }\n        else {\n            price = product.priceRange?.minVariantPrice;\n        }\n    }\n    if (!price) {\n        return null;\n    }\n    if (measurement) {\n        return (React.createElement(Money, { ...passthroughProps, data: price, measurement: measurement }));\n    }\n    return React.createElement(Money, { ...passthroughProps, data: price });\n}\n"],"names":["ProductPrice","props","priceType","variantId","valueType","product","passthroughProps","price","measurement","variant","_b","flattenConnection","_a","_c","_d","_e","_f","_g","_h","React","Money"],"mappings":"wMAOO,SAASA,EAAaC,EAAO,qBAChC,KAAM,CAAE,UAAAC,EAAY,UAAW,UAAAC,EAAW,UAAAC,EAAY,MAAO,KAAMC,KAAYC,CAAgB,EAAKL,EACpG,GAAII,GAAW,KACX,MAAM,IAAI,MAAM,uDAAuD,EAE3E,IAAIE,EACAC,EACJ,MAAMC,EAAUN,IACVO,EAAAC,GAAkBC,EAAAP,GAAA,YAAAA,EAAS,WAAT,KAAAO,EAAqB,CAAA,CAAE,EAAE,KAAMH,IAAYA,GAAA,YAAAA,EAAS,MAAON,CAAS,IAAtF,KAAAO,EACA,KACN,GAAIR,IAAc,YACd,GAAIC,GAAaM,EAAS,CACtB,KAAII,EAAAJ,EAAQ,mBAAR,YAAAI,EAA0B,YAAWC,EAAAL,EAAQ,UAAR,YAAAK,EAAiB,QACtD,OAAO,KAEXP,EAAQE,EAAQ,gBACnB,MACQL,IAAc,MACnBG,GAAQQ,EAAAV,GAAA,YAAAA,EAAS,sBAAT,YAAAU,EAA8B,gBAGtCR,GAAQS,EAAAX,GAAA,YAAAA,EAAS,sBAAT,YAAAW,EAA8B,qBAItCb,GAAaM,GACbF,EAAQE,EAAQ,QACZL,IAAc,SACdG,EAAQE,EAAQ,UAChBD,EAAcC,EAAQ,uBAGrBL,IAAc,MACnBG,GAAQU,EAAAZ,EAAQ,aAAR,YAAAY,EAAoB,gBAG5BV,GAAQW,EAAAb,EAAQ,aAAR,YAAAa,EAAoB,gBAGpC,OAAKX,EAGDC,EACQW,EAAM,cAAcC,EAAO,CAAE,GAAGd,EAAkB,KAAMC,EAAO,YAAaC,CAAW,CAAE,EAE9FW,EAAM,cAAcC,EAAO,CAAE,GAAGd,EAAkB,KAAMC,CAAK,CAAE,EAL3D,IAMf"}