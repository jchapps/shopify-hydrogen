import { Interfaces } from '@oclif/core';
export declare function errorHandler(error: Error & {
    exitCode?: number | undefined;
}): Promise<never> | undefined;
/**
 * If the given file path comes from within a plugin, return the relative path, plus the plugin name.
 *
 * This gives us very consistent paths for errors thrown from plugin code.
 *
 */
export declare function cleanStackFrameFilePath({ currentFilePath, projectRoot, pluginLocations, }: {
    currentFilePath: string;
    projectRoot: string;
    pluginLocations: {
        name: string;
        pluginPath: string;
    }[];
}): string;
/**
 * Register a Bugsnag error listener to clean up stack traces for errors within plugin code.
 *
 */
export declare function registerCleanBugsnagErrorsFromWithinPlugins(plugins: Interfaces.Plugin[]): Promise<void>;
