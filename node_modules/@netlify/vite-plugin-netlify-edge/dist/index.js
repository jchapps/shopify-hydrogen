var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
module.exports = __toCommonJS(src_exports);
var import_fs = __toESM(require("fs"));
var import_path = __toESM(require("path"));
var import_fast_glob = __toESM(require("fast-glob"));
var staticManifestModuleId = "@static-manifest";
var resolvedStaticManifestModuleId = "\0" + staticManifestModuleId;
var edgeFunctionsDir = ".netlify/edge-functions";
var DEFAULT_FUNCTION_NAME = "handler";
var netlifyEdge = ({
  generateStaticManifest = true,
  generateEdgeFunctionsManifest = true,
  additionalStaticPaths = [],
  functionName = DEFAULT_FUNCTION_NAME
} = {}) => {
  let resolvedConfig;
  let originalPublicDir;
  return {
    name: "vite-plugin-netlify-edge",
    config(config) {
      var _a, _b;
      if ((_a = config.build) == null ? void 0 : _a.ssr) {
        originalPublicDir = config.publicDir || "public";
        (_b = config.build).outDir || (_b.outDir = import_path.default.join(edgeFunctionsDir, functionName));
        return {
          publicDir: false,
          ssr: {
            target: "webworker",
            noExternal: true
          },
          build: {
            rollupOptions: {
              output: {
                format: "es"
              }
            }
          }
        };
      }
    },
    configResolved(config) {
      resolvedConfig = config;
    },
    resolveId(id) {
      if (generateStaticManifest && id === staticManifestModuleId) {
        return resolvedStaticManifestModuleId;
      }
    },
    load(id) {
      if (generateStaticManifest && id === resolvedStaticManifestModuleId) {
        const files = import_fast_glob.default.sync("**/*", {
          cwd: import_path.default.resolve(resolvedConfig.root, originalPublicDir)
        }).map((file) => `${resolvedConfig.base}${file}`);
        return `export default new Set(${JSON.stringify([
          ...files,
          ...additionalStaticPaths
        ])})`;
      }
    },
    writeBundle(options) {
      var _a, _b;
      if (generateEdgeFunctionsManifest && resolvedConfig.build.ssr && (((_a = options.dir) == null ? void 0 : _a.endsWith(edgeFunctionsDir)) || ((_b = options.dir) == null ? void 0 : _b.endsWith(import_path.default.join(edgeFunctionsDir, functionName))))) {
        const manifest = {
          functions: [{ function: functionName, path: "/*" }],
          version: 1
        };
        import_fs.default.writeFileSync(import_path.default.join(resolvedConfig.root, edgeFunctionsDir, "manifest.json"), JSON.stringify(manifest), "utf-8");
      }
    }
  };
};
var src_default = netlifyEdge;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
